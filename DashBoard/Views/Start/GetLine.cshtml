@model DashBoard.MyClass.DataPacking

@{
    ViewBag.Title = "DashBoard";

}
<meta http-equiv="refresh" content="15">
<body>
    <div class="Block">

    @if (Model.Count == 0)
    {
        <div class="NoReport">
            @Html.Label(Model.LineName)
            Отсутствует выпуск
        </div>
       
    }
    else
    {
        <div style=" display: flex; justify-content:center; align-items:center;  text-align: center ; margin-left:2%; ">

            <div style="margin-left:2%;">
                @Html.Label(@Model.LineName, new { @style = "font-size: 60px ; text-align:center;" })
            </div>

            @if (decimal.Parse(@Model.FPY) <= 98)
            {          
                <div>
                    @Html.Label("FPY  " + Model.FPY, new { @style = "font-size: 45px; background-color:lightsalmon;" })
                </div>
            }
            else
            {    
                <div>
                    @Html.Label("FPY " + Model.FPY, new { @style = "font-size: 45px; background-color:greenyellow;" })
                </div>
            }

        </div>

        <div style="font-size: 50px; align-items:center; margin:auto; text-align: center">
            Модель - <label style="background-color: aquamarine">@Model.ModelName</label>
        </div>

        if (Model.Breaks)
        {
            <p style="background-color: yellow; font-size: 50px; padding: 0px; text-align: center ; margin: 1px; width:auto">
                Перерыв!
                <br />
                с @Html.Label(Model.StartBreak) до @Html.Label(Model.EndBreak)
                <br />
                Осталось до конца перерыва @Html.Label(Model.leftTime, new { @id = "Lb" })
            </p>

        }
        else
        {

            <div class="packcount">  
                <div>
                    Упаковано @Html.Label(Model.Count.ToString())
                </div>
                <div>
                    План @Html.Label(Model.ShiftPlan.ToString())
                </div>
            </div>

            @*<p class="packcount">Упакован @Html.Label(Model.Count.ToString())</p>
            <p class="packcount">План @Html.Label(Model.ShiftPlan.ToString())</p>*@
            if (@Model.Plancount > 0)
            {
                <p style="background-color: greenyellow ; text-align: center; font-size: 70px;margin: 0%;padding:0%;">Опережение  @Model.Plancount </p>
            }
            else
            {
                <p style="background-color: lightsalmon; text-align: center; font-size:70px;margin: 0%;padding:0%;"> Отставание @Model.Plancount </p>
            }
        }

    }
  
        <div class="back" > 
            @Html.ActionLink("Назад", "FAS", "Start", new { @style ="Color: white;" })        
        </div>
   
       
   </div>
</body>

<style>

    .Block {

        display:block;
        align-items:center;
        border:1px solid black;

    }

    .back {
        font-size: 50px;
        background-color:cornflowerblue;        
        margin-top: 60px;
        text-align: center;
        width: 100%;
    }

    .NoReport {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        font-size: 100px;
        padding: 2px;
        line-height: 0.7em;
    }

    .packcount {
        color: black;
        margin: 0%;
        padding: 0%;
        font-size: 75px;
        text-align: center;
        display:block;
    }

    body {
        margin: 0%;
        padding: 0%;
    }
</style>


@*<script>
    function myfunction() {
        var tt = document.getElementById('Lb').textContent;           
        tt -= 1;
        console.log(tt);
        //tt -= 1;    
        //alert(tt);
        document.getElementById('Lb').innerHTML = tt;
    }


    setInterval(myfunction, 1000);

</script>*@
